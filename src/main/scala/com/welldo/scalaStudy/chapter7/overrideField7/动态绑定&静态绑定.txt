
背景
    当子类和父类存在相同的方法，子类重写了父类的方法，
    程序在运行时调用的是父类的方法还是子类的重写方法呢（尤其是存在向上类型转换的情况）？

在java中，绑定分为静态绑定和动态绑定.

静态绑定
    在程序执行以前已经被绑定（即在编译过程中就已经知道这个方法到底是哪个类中的方法）。

    java当中的方法只有final、static、private修饰的的方法和构造方法是静态绑定的。

    private修饰的方法：
        private修饰的方法是不能被继承的，因此子类无法访问父类中private修饰的方法。
        所以只能通过父类对象来调用该方法体。
        因此可以说private方法和定义这个方法的类绑定在了一起。

    final修饰的方法：
        可以被子类继承，但是不能被子类重写（覆盖），
        所以在子类中调用的实际是父类中定义的final方法。

    static修饰的方法：
        可以被子类继承，但是不能被子类重写（覆盖），但是可以被子类隐藏。
        （如果父类里有一个static方法，它的子类里如果没有对应的方法，
        那么当子类对象调用这个方法时就会使用父类中的方法，
        而如果子类中定义了相同的方法，则会调用子类中定义的方法，
        唯一的不同就是：当子类对象向上类型转换为父类对象时，不论子类中有没有定义这个静态方法，该对象都会使用父类中的静态方法，
        因此这里说静态方法可以被隐藏而不能被覆盖。
        这与子类隐藏父类中的成员变量是一样的。

    构造方法：构造方法也是不能被继承的

动态绑定
    除了静态绑定中所涉及的方法, 其他的重写方法 使用动态绑定.
    当对象调用方法的时候，该方法会和该对象的内存地址绑定