
Scala 特质trait的介绍

trait 的声明
    trait 特质名 {    //特质名一般首字母大写
        trait体
    }

没有父类
    class  类名   extends   特质1   with    特质2   with   特质3 ..

有父类
    class  类名   extends   父类   with  特质1   with   特质2   with 特质3

1)接口并不属于面向对象的范畴，Scala是纯面向对象的语言，在Scala中，没有接口。

2)Scala语言中，采用trait（特质，特征）来代替接口的概念，
也就是说，多个类具有相同的特质（特征）时，就可以将这个特质（特征）独立出来，采用关键字trait声明。
trait = 抽象类+接口

3)在scala中，java中的接口可以当做特质使用

4)可以把特质可以看作是对继承的一种补充
    和java一样, Scala的继承是单继承,也就是一个类最多只能有一个父类,
    这种单继承的机制可保证类 的纯洁性。    但对子类功能的扩展有一定影响.
    所以: Scala引入trait特征,  第一可以替代Java的接口,  第二个也是对单继承机制的一种补充

son类继承了father类, 如果father实现了某个接口, 那么son类也能使用;
假如用户需求是 仅仅希望father类有某个方法, son类没有, 怎么做呢?
答案1: 让father类继承 trait即可
答案2: 动态混入(后面详讲)