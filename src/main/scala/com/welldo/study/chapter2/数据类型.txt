1)Scala 与 Java有着相似的数据类型

1)在Scala中数据类型都是对象，也就是说scala没有java中的原生类型(int, long, flout , double 等)

2)Scala数据类型分为两大类 AnyVal(值类型) 和 AnyRef(引用类型)，
    请查看 "数据类型.png"

对 数据类型的关系图的说明
    1)Any是所有类的根类型,即所有类的父类(基类, 参考java的Object)
    2)两个大的类型分支
        AnyVal :值类型，即可以理解成就是java的基本数据类型
        AnyRef :引用类型
    3)AnyVal:值类型, 请注意:是类(对象)
    4)在scala中有两个特别的类型
        Null类型: 是AnyRef的子类, 只有一个实例:null;他是bottom class;
        Nothing类型: 是所有类的子类，他是bottom class ,
            它的价值是在于, 可以将Nothing类型的对象返回给任意的变量或者方法，
            在抛出异常时, 使用较多(后面演示)
    7)在scala中遵守 低精度的数据 自动的转成 高精度的数据类型。(即隐式转换)
    8)在scala中，Unit 类型比较特殊，这个类型也只有一个实例:一个小括号 ()

特点
相对于java的类型系统，scala要复杂些！也正是这复杂多变的类型系统, 才让面向对象编程和函数式编程完美的融合在了一起
